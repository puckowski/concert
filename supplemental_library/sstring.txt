import math;
import string;

function reverseString : string as input;
	string reversed = "";
	string strTmp;
	int len;

	call length : input -> len;
	len -= 1;

	while len >= 0;
		call char_at : input, len -> strTmp;
		reversed += strTmp;
		len -= 1;
	end;
	
return reversed;

function startsWith : string as input, string as startStr;
	string firstChars;
	int len;
	string strTmp;
	int index = 0;
	
	call length : startStr -> len;
	
	while len > 0;
		call char_at : input, index -> strTmp;
		firstChars += strTmp;
		len -= 1;
		index += 1;
	end;
	
	int toReturn;
	
	if firstChars == startStr;
		toReturn = 1;
	else;
		toReturn = 0;
	end;
return toReturn;

function endsWith : string as input, string as startStr;
	string firstChars;
	int lenStr;
	int lenInput;
	int start;
	string strTmp;
	
	call length : startStr -> lenStr;
	call length : input -> lenInput;
	
	lenInput -= lenStr;
	
	start = lenInput;
	call length : input -> lenInput;
	
	while start < lenInput;
		call char_at : input, start -> strTmp;
		firstChars += strTmp;
		start += 1;
	end;
	
	int toReturn;
	
	if firstChars == startStr;
		toReturn = 1;
	else;
		toReturn = 0;
	end;
return toReturn;

function substring : string as input, int as start, int as endIndex;
	string substr = "";
	string strTmp;

	while start < endIndex;
		call char_at : input, start -> strTmp;
		substr += strTmp;
		start += 1;
	end;
return substr;

function indexOf : string as input, string as substr;
	int index = -1;
	int len;
	int inputLen;
	string tmp;
	
	call length : substr -> len;
	call length : input -> inputLen;
	
	int startIndex = 0;
	int endIndex = len;

	inputLen -= len;

	while endIndex <= inputLen;
		call substring : input, startIndex, endIndex -> tmp;

		if tmp == substr;
			index = startIndex;
			index -= 1;
			
			break 2;
		end;
		
		startIndex += 1;
		endIndex += 1;
	end;
return index;

function lastIndexOf : string as input, string as substr;
	int index = -1;
	int len;
	int inputLen;
	string tmp;
	
	call length : substr -> len;
	call length : input -> inputLen;
	
	int startIndex = 0;
	int endIndex = len;

	inputLen -= len;

	while endIndex <= inputLen;
		call substring : input, startIndex, endIndex -> tmp;

		if tmp == substr;
			index = startIndex;
			index -= 1;
		end;
		
		startIndex += 1;
		endIndex += 1;
	end;
return index;